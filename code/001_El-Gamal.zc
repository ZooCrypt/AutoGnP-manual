(* CPA secure encryption from the DDH assumption aka El-Gamal. *)

adversary A_ddh : (G * G * G) -> Bool.

assumption ddh ([x,y])
  [ x, y    <-$ Fq; b <- A_ddh(g^x,g^y,g^(x*y)); ]
  [ x, y, z <-$ Fq; b <- A_ddh(g^x,g^y,g^z); ].

adversary A1 : G -> (G * G).
adversary A2 : (G * G) -> Bool.

bound_adv [ 
  a <-$ Fq;
  let PK = g^a;
  (m0,m1) <- A1(PK);
  
  b <-$ Bool;
  let mb = (b?m0:m1);
    
  u <-$ Fq;
  let C1 = g^u;
  let C2 = mb*g^(a*u);
  b' <- A2(C1,C2);
] : b = b'.
bycrush.

restart.

unfold.
move 4 2.
abstract 3 arg (g^a,g^u,g^(a*u)).
assumption_decisional! ddh -> t.
unfold.
norm_unknown.
move t +2.
rnd t (t -> t - log(b?m0:m1)) _.
norm.
indep!.
qed.